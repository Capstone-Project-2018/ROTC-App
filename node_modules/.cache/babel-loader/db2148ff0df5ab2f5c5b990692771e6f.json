{"ast":null,"code":"import _classCallCheck from \"/Users/kylesmith/Documents/GitHub/ROTC-App/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kylesmith/Documents/GitHub/ROTC-App/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kylesmith/Documents/GitHub/ROTC-App/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kylesmith/Documents/GitHub/ROTC-App/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kylesmith/Documents/GitHub/ROTC-App/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kylesmith/Documents/GitHub/ROTC-App/src/components/Calendar.jsx\";\nimport React from \"react\";\nimport dateFns from \"date-fns\";\nimport './Calendar.css';\nimport firebase from '../firebase';\nimport { format } from \"path\";\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Calendar, _React$Component);\n\n  function Calendar(props) {\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Calendar).call(this, props));\n\n    _this.renderEvents = function () {\n      var db = firebase.firestore();\n      var events = [];\n      db.collection(\"events\").where(\"eventStart\", \"==\", _this.state.selectedDate).get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          //console.log(doc.id, \"=> \", doc.data());\n          events.push();\n          this.setState({\n            eventDescription: doc.data()['eventDescription']\n          });\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n      return function () {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"event\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, _this.state.eventDescription));\n      };\n    };\n\n    _this.eventDescription = function (event) {\n      _this.setState({\n        eventDescription: event\n      });\n    };\n\n    _this.onDateClick = function (day) {\n      _this.setState({\n        selectedDate: day\n      });\n    };\n\n    _this.nextMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.addMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    _this.prevMonth = function () {\n      _this.setState({\n        currentMonth: dateFns.subMonths(_this.state.currentMonth, 1)\n      });\n    };\n\n    _this.state = {\n      currentMonth: new Date(),\n      selectedDate: new Date(),\n      eventDescription: []\n    };\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"renderHeader\",\n    value: function renderHeader() {\n      var dateFormat = \"MMMM YYYY\";\n      return React.createElement(\"div\", {\n        className: \"header row flex-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col col-start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icon\",\n        onClick: this.prevMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"chevron_left\")), React.createElement(\"div\", {\n        className: \"col col-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, dateFns.format(this.state.currentMonth, dateFormat))), React.createElement(\"div\", {\n        className: \"col col-end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"icon\",\n        onClick: this.nextMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"chevron_right\")));\n    }\n  }, {\n    key: \"renderDays\",\n    value: function renderDays() {\n      var dateFormat = \"ddd\";\n      var days = [];\n      var startDate = dateFns.startOfWeek(this.state.currentMonth);\n\n      for (var i = 0; i < 7; i++) {\n        days.push(React.createElement(\"div\", {\n          className: \"col col-center\",\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, dateFns.format(dateFns.addDays(startDate, i), dateFormat)));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"days row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, days);\n    }\n  }, {\n    key: \"renderCells\",\n    value: function renderCells() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          currentMonth = _this$state.currentMonth,\n          selectedDate = _this$state.selectedDate;\n      var monthStart = dateFns.startOfMonth(currentMonth);\n      var monthEnd = dateFns.endOfMonth(monthStart);\n      var startDate = dateFns.startOfWeek(monthStart);\n      var endDate = dateFns.endOfWeek(monthEnd);\n      var dateFormat = \"D\";\n      var rows = [];\n      var days = [];\n      var day = startDate;\n      var formattedDate = \"\";\n\n      while (day <= endDate) {\n        var _loop = function _loop(i) {\n          formattedDate = dateFns.format(day, dateFormat);\n          var cloneDay = day;\n          days.push(React.createElement(\"div\", {\n            className: \"col cell \".concat(!dateFns.isSameMonth(day, monthStart) ? \"disabled\" : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"),\n            key: day,\n            onClick: function onClick() {\n              return _this2.onDateClick(dateFns.parse(cloneDay));\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"number\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, formattedDate)));\n          day = dateFns.addDays(day, 1);\n        };\n\n        for (var i = 0; i < 7; i++) {\n          _loop(i);\n        }\n\n        rows.push(React.createElement(\"div\", {\n          className: \"row\",\n          key: day,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, days));\n        days = [];\n      }\n\n      return React.createElement(\"div\", {\n        className: \"body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, rows);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"calendar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, this.renderHeader(), this.renderDays(), this.renderCells(), this.renderEvents());\n    }\n  }]);\n\n  return Calendar;\n}(React.Component);\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/kylesmith/Documents/GitHub/ROTC-App/src/components/Calendar.jsx"],"names":["React","dateFns","firebase","format","Calendar","props","renderEvents","db","firestore","events","collection","where","state","selectedDate","get","then","querySnapshot","forEach","doc","push","setState","eventDescription","data","catch","error","console","log","event","onDateClick","day","nextMonth","currentMonth","addMonths","prevMonth","subMonths","Date","dateFormat","days","startDate","startOfWeek","i","addDays","monthStart","startOfMonth","monthEnd","endOfMonth","endDate","endOfWeek","rows","formattedDate","cloneDay","isSameMonth","isSameDay","parse","renderHeader","renderDays","renderCells","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport dateFns from \"date-fns\";\r\nimport './Calendar.css';\r\nimport firebase from '../firebase';\r\nimport { format } from \"path\";\r\n\r\nclass Calendar extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentMonth: new Date(),\r\n      selectedDate: new Date(),\r\n      eventDescription: [],\r\n    };\r\n  }\r\n\r\n  renderHeader() {\r\n    \r\n    const dateFormat = \"MMMM YYYY\";\r\n\r\n    return (\r\n      <div className=\"header row flex-middle\">\r\n        <div className=\"col col-start\">\r\n          <div className=\"icon\" onClick={this.prevMonth}>chevron_left</div>\r\n        </div>\r\n        <div className=\"col col-center\">\r\n          <span>{dateFns.format(this.state.currentMonth, dateFormat)}</span>\r\n        </div>\r\n        <div className=\"col col-end\">\r\n          <div className=\"icon\" onClick={this.nextMonth}>chevron_right</div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n  renderDays() {\r\n\r\n    const dateFormat = \"ddd\";\r\n    const days = [];\r\n\r\n    let startDate = dateFns.startOfWeek(this.state.currentMonth);\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      days.push (\r\n        <div className=\"col col-center\" key={i}>\r\n          {dateFns.format(dateFns.addDays(startDate, i), dateFormat)}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return <div className=\"days row\">{days}</div>;\r\n  }\r\n\r\n  renderCells() {\r\n\r\n    const { currentMonth, selectedDate } = this.state;\r\n\r\n    const monthStart = dateFns.startOfMonth(currentMonth);\r\n    const monthEnd = dateFns.endOfMonth(monthStart);\r\n    const startDate = dateFns.startOfWeek(monthStart);\r\n    const endDate = dateFns.endOfWeek(monthEnd);\r\n\r\n    const dateFormat = \"D\";\r\n    const rows = [];\r\n\r\n    let days = [];\r\n    let day = startDate;\r\n    let formattedDate = \"\";\r\n\r\n    while (day <= endDate) {\r\n\r\n      for (let i = 0; i < 7; i++) {\r\n\r\n        formattedDate = dateFns.format(day, dateFormat);\r\n        const cloneDay = day;\r\n        \r\n        days.push (\r\n          <div\r\n            className={`col cell ${!dateFns.isSameMonth(day, monthStart) ? \"disabled\" : dateFns.isSameDay(day, selectedDate) ? \"selected\" : \"\"}`}\r\n            key={day}\r\n            onClick={() => this.onDateClick(dateFns.parse(cloneDay))}\r\n          >\r\n            <span className=\"number\">{formattedDate}</span>\r\n          </div>\r\n        );\r\n\r\n        day = dateFns.addDays(day, 1);\r\n      }\r\n\r\n      rows.push (\r\n        <div className=\"row\" key={day}>{days}</div>\r\n      );\r\n\r\n      days = [];\r\n    }\r\n\r\n    return <div className=\"body\">{rows}</div>;\r\n  }\r\n\r\n  renderEvents = () => {\r\n    var db = firebase.firestore();\r\n    var events = [];\r\n    db.collection(\"events\")\r\n    .where(\"eventStart\", \"==\", this.state.selectedDate)\r\n    .get()\r\n    .then((querySnapshot) => {\r\n      querySnapshot.forEach(function(doc) {\r\n        //console.log(doc.id, \"=> \", doc.data());\r\n        events.push()\r\n        this.setState({\r\n          eventDescription: doc.data()['eventDescription']\r\n        })\r\n      });\r\n    })\r\n    .catch(function(error) {\r\n      console.log(error);\r\n    });\r\n    return () => (\r\n      <div>\r\n        <span className=\"event\">{this.state.eventDescription}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  eventDescription = event => {\r\n    this.setState({\r\n      eventDescription: event\r\n    });\r\n  }\r\n\r\n  onDateClick = day => {\r\n    this.setState ({\r\n      selectedDate: day\r\n    });\r\n  };\r\n\r\n  nextMonth = () => {\r\n    this.setState ({\r\n      currentMonth: dateFns.addMonths(this.state.currentMonth, 1)\r\n    });\r\n  };\r\n\r\n  prevMonth = () => {\r\n    this.setState ({\r\n      currentMonth: dateFns.subMonths(this.state.currentMonth, 1)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calendar\">\r\n        {this.renderHeader()}\r\n        {this.renderDays()}\r\n        {this.renderCells()}\r\n        {this.renderEvents()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;\r\n"]},"metadata":{},"sourceType":"module"}